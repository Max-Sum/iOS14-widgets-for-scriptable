{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "blue",
    "glyph" : "magic"
  },
  "name" : "SL03LockScreenWidget",
  "script" : "\/\/ Variables used by Scriptable.\n\/\/ These must be at the very top of the file. Do not edit.\n\/\/ icon-color: deep-purple; icon-glyph: magic;\n\/**\n * iOS widget(锁屏) --- 长安深蓝SL03电量\n * 项目地址: https:\/\/github.com\/zkytech\/iOS14-widgets-for-scriptable\n *\n * 传入以下参数: refresh_token\n * 参数获取方法见文档: https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable#4-%E6%B7%B1%E8%93%9Dsl03%E8%BD%A6%E8%BE%86%E7%8A%B6%E6%80%81\n * - 组件依赖深蓝APP登录信息（refresh_token）\n * - 本组件仅用于学习交流\n * - 本组件为开源软件，不会进行收费！！！\n *\n *\n *\n *\n *\/\nconst params = args.widgetParameter ? args.widgetParameter.split(\",\") : [];\nparam_refresh_token = params[0];\nconst LW = new ListWidget(); \/\/ widget对象\nconst {\n  getCarId,\n  getToken,\n  refreshCarData,\n  getCarStatus,\n  getCarInfo,\n  getCarLocation,\n} = await getService(\n  \"SL03Api\",\n  \"https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/master\/scripts\/lib\/service\/SL03Api.js\",\n  false\n);\nconst { update } = await getService(\n  \"UpdateScript\",\n  \"https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/master\/scripts\/lib\/service\/UpdateScript.js\",\n  false\n);\nconst { drawArc } = await getService(\n  \"DrawShape\",\n  \"https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/master\/scripts\/lib\/service\/DrawShape.js\",\n  false\n);\n\nconst token = await getToken(param_refresh_token);\nconst car_id = await getCarId(token);\nconst car_status = await getCarStatus(token, car_id);\n\/\/ 剩余电量\nconst remain_power = car_status.remainPower;\n\n\nconst circle = await drawArc(LW, remain_power);\n\nconst sf_car = circle.addImage(SFSymbol.named(\"car.rear.fill\").image);\nsf_car.imageSize = new Size(26, 26);\nsf_car.tintColor = Color.white();\n\nLW.presentAccessoryCircular();\n\nScript.setWidget(LW);\nScript.complete();\n\/\/ 更新脚本代码\nupdate(\"https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/master\/scripts\/SL03LockScreenWidget.js\")\n\nasync function loadText(textUrl) {\n  const req = new Request(textUrl);\n  return await req.load();\n}\n\nasync function getService(name, url, forceDownload) {\n  const fm = FileManager.local();\n  const scriptDir = module.filename.replace(\n    fm.fileName(module.filename, true),\n    \"\"\n  );\n  let serviceDir = fm.joinPath(scriptDir, \"lib\/service\/\" + name);\n\n  if (!fm.fileExists(serviceDir)) {\n    fm.createDirectory(serviceDir, true);\n  }\n\n  let libFile = fm.joinPath(scriptDir, \"lib\/service\/\" + name + \"\/index.js\");\n\n  if (fm.fileExists(libFile) && !forceDownload) {\n    fm.downloadFileFromiCloud(libFile);\n  } else {\n    \/\/ download once\n    let indexjs = await loadText(url);\n    fm.write(libFile, indexjs);\n  }\n\n  let service = importModule(\"lib\/service\/\" + name);\n\n  return service;\n}\n",
  "share_sheet_inputs" : [

  ]
}