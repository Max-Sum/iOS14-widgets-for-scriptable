{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "blue",
    "glyph" : "car"
  },
  "name" : "SL03Widget",
  "script" : "\n\/**\n * iOS widget --- 长安深蓝SL03桌面小组件\n * 项目地址: https:\/\/github.com\/zkytech\/iOS14-widgets-for-scriptable\n * 联系邮箱: zhangkunyuan@hotmail.com\n *\n * 传入以下参数: refresh_token\n * 参数获取方法见文档: https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable#4-%E6%B7%B1%E8%93%9Dsl03%E8%BD%A6%E8%BE%86%E7%8A%B6%E6%80%81\n * - 组件依赖深蓝APP登录信息（refresh_token）\n * - 本组件仅用于学习交流\n * - 本组件为开源软件，不会进行收费！！！\n\n *\n *\n * - 不要在脚本里填token，所有参数必须通过组件设置界面填写\n *\/\n\/\/ 开发时切换到dev分支\nconst branch = \"master\";\nconst force_download = true;\n\n\/\/ const force_download = branch != \"master\";\n\n\nconst {\n  getCarId,\n  getToken,\n  refreshCarData,\n  getCarStatus,\n  getCarInfo,\n  getCarLocation,\n} = await getService(\n  \"SL03Api\",\n  `https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/${branch}\/scripts\/lib\/service\/SL03Api.js`,\n  force_download\n);\nconst { update } = await getService(\n  \"UpdateScript\",\n  `https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/${branch}\/scripts\/lib\/service\/UpdateScript.js`,\n  force_download\n);\n\nif(branch == \"master\"){\n  \/\/ 更新组件代码\n  await update(\n    `https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/${branch}\/scripts\/SL03Widget.js`\n  );\n}\n\n\nconst LW = new ListWidget(); \/\/ widget对象\n\nlet presentSize = \"medium\"; \/\/ 预览组件的大小\n\/\/ const mainColor = new Color(\"#30336b\")\nconst mainColor = new Color(\"#000000\");\nlet project_id = \"\";\nlet param_refresh_token = \"\";\nif (config.runsInWidget) {\n  const params = args.widgetParameter ? args.widgetParameter.split(\",\") : [\"\"];\n  param_refresh_token = params.length > 0 ? params[0].trim() : \"\";\n}\npresentSize = \"medium\";\n\nawait renderCarStatus(param_refresh_token);\nLW.backgroundColor = mainColor;\n\nif (!config.runsInWidget) {\n  if (presentSize == \"large\") {\n    await LW.presentLarge();\n  }\n  if (presentSize == \"medium\") {\n    await LW.presentMedium();\n  }\n  if (presentSize == \"small\") {\n    await LW.presentSmall();\n  }\n}\n\nScript.setWidget(LW);\n\nScript.complete();\n\n\/\/ 加载图片\nasync function loadImage(name,force_download) {\n  const img_map = {\n    \"白色车\":\"https:\/\/i.328888.xyz\/2023\/03\/17\/LFK8Z.md.png\",\n    \"LOGO\":\"https:\/\/deepal.com.cn\/202303112321\/share_logo.png\"\n  }\n  const img_url = img_map[name];\n  const file_name = img_url.split(\"\/\")[img_url.split(\"\/\").length - 1]\n\n  let fm \n  try{\n    fm = FileManager.iCloud();\n  }catch{\n    fm = FileManager.local();\n  }\n\n  const script_dir = module.filename.replace(\n    fm.fileName(module.filename, true),\n    \"\"\n  );\n  let img_dir = fm.joinPath(script_dir, \"imgs\");\n\n  if (!fm.fileExists(img_dir)) {\n    fm.createDirectory(img_dir, true);\n  }\n\n  let img_file = fm.joinPath(script_dir, \"imgs\/\" + file_name + \".png\");\n\n  if (fm.fileExists(img_file) && !force_download) {\n    console.log(`从本地缓存中加载图片:${name}`)\n    try{\n      fm.downloadFileFromiCloud(img_file);\n    }catch(e){\n\n    }\n  } else {\n    \/\/ download once\n    console.log(`开始下载图片:${name}`)\n    const req = new Request(img_url)\n    const img = await req.loadImage()\n    fm.writeImage(img_file, img)\n  }\n\n  return fm.readImage(img_file);\n}\n\n\/\/ 渲染组件\nasync function renderCarStatus(param_refresh_token) {\n  const token = await getToken(param_refresh_token);\n  const car_id = await getCarId(token);\n  \/\/ await refreshCarData()\n  const car_status = await getCarStatus(token, car_id);\n  const car_info = await getCarInfo(token, car_id);\n  const car_location = await getCarLocation(token, car_id);\n\n  if (car_status != null && car_info != null && car_location != null) {\n    \/\/ 数据更新时间\n    const update_time = car_status.terminalTime;\n    \/\/ 总里程\n    const total_odometer = Math.round(car_status.totalOdometer);\n    \/\/ 车内温度\n    const vehicle_temperature = Math.round(car_status.vehicleTemperature);\n    \/\/ 剩余里程\n    const remained_power_mile = Math.round(car_status.remainedPowerMile);\n    \/\/ 剩余电量\n    const remain_power = Math.round(car_status.remainPower);\n    \/\/ 车辆名称\n    const car_name = car_info.carName;\n    \/\/ 车辆配置名称，比如：515km\n    const conf_name = car_info.confName.split(\"，\")[2];\n    \/\/ 车牌号\n    const plate_number = car_info.plateNumber;\n    \/\/ 型号\n    const series_name = car_info.seriesName;\n    \/\/ 车辆位置\n    const location_str = car_location.addrDesc;\n    \/\/ 车门状态\n    const lock_status =\n      car_status.driverDoorLock == 0 && car_status.passengerDoorLock == 0;\n    \/\/ 是否为增程车型\n    const is_mix = car_status.remainedOilMile != undefined;\n    \/\/ 增城续航里程\n    const remained_oil_mile = is_mix\n      ? Math.round(car_status.remainedOilMile)\n      : \"\";\n\n    \/\/const power_img = LW.addImage(drawPowerImage(remain_power,remained_power_mile))\n    \/\/power_img.cornerRadius=5\n    \/\/power_img.imageSize=new Size(300,18)\n    \/**\n        |    col0 |   col1_0|   col1_1 |\n        |---------|---------|----------|\n        |         | 总里程   | 续航里程  |\n        | 车辆图片 |  xxxkm |   xxkm   |\n        |         | t_space0| t_space1  |\n        | ------- |----------|---------|\n        | 车辆名称 |  温度     | 位置     |\n        | ------- | xx摄氏度. | xxx省xxx市 |\n        |         | t_space2 | t_space3  |\n        | 车牌号   |---------------------｜\n        |        | 数据更新时间          |\n        | col0   |        col1           |\n    *\/\n    const container = LW.addStack();\n    container.layoutHorizontally();\n    container.spacing = 15;\n    \/\/ 第1列\n    const col0 = container.addStack();\n    col0.layoutVertically();\n    col0.spacing = 6;\n    col0.size = new Size(110, 0);\n    \/\/ 车辆图片\n    const car_img = await loadImage(\"白色车\");\n    const car_stack = col0.addStack();\n\n    const img_container = car_stack.addImage(car_img);\n\n    img_container.imageSize = new Size(100, 50);\n    \/\/ 车辆名称、型号\n    const car_name_container = col0.addStack();\n\n    car_name_container.layoutHorizontally();\n    car_name_container.spacing = 3;\n    car_name_container.bottomAlignContent();\n\n    \/\/ 车辆名称\n    const car_name_text = car_name_container.addText(car_name);\n    car_name_text.font = Font.boldSystemFont(15);\n    car_name_text.textColor = Color.white();\n\n    \/\/car_name_text.minimumScaleFactor = 1\n    const lock_icon = car_name_container.addImage(\n      lock_status\n        ? SFSymbol.named(\"lock.fill\").image\n        : SFSymbol.named(\"lock.open.fill\").image\n    );\n    \/\/ = SFSymbol.named(\"lock.open.fill\")\n    lock_icon.tintColor = lock_status\n      ? new Color(\"#27ae60\")\n      : new Color(\"#c0392b\");\n    lock_icon.imageSize = new Size(15, 15);\n    const car_seires_container = col0.addStack();\n    \/\/ 车辆logo\n    const logo = car_seires_container.addImage(\n      await loadImage(\"LOGO\")\n    );\n    logo.imageSize = new Size(12, 12);\n    \/\/ 车辆型号\n    const car_series_text = car_seires_container.addText(\n      series_name + \" \" + conf_name\n    );\n    car_series_text.font = Font.mediumSystemFont(11);\n    car_series_text.textColor = new Color(\"#bdc3c7\");\n    \/\/car_series_text.minimumScaleFactor = 0.5\n\n    \/\/ 车牌号\n    const plate_number_text = col0.addText(plate_number);\n    plate_number_text.font = Font.thinMonospacedSystemFont(10);\n    plate_number_text.textColor = new Color(\"#bdc3c7\");\n    \/\/car_series_text.minimumScaleFactor = 0.5\n\n    \/\/ 第2列\n    const col1 = container.addStack();\n\n    col1.layoutVertically();\n    col1.spacing = 8;\n    const col1_row0 = col1.addStack();\n    const col1_row1 = col1.addStack();\n    col1_row1.layoutHorizontally();\n    col1_row1.spacing = 5;\n\n    const refresh_icon = col1_row1.addImage(\n      SFSymbol.named(\"arrow.clockwise\").image\n    );\n    refresh_icon.tintColor = Color.gray();\n    refresh_icon.imageSize = new Size(13, 13);\n    const refresh_time_text = col1_row1.addText(update_time);\n    refresh_time_text.textColor = Color.gray();\n    refresh_time_text.font = Font.thinMonospacedSystemFont(13);\n\n    col1_row0.layoutHorizontally();\n    col1_row0.spacing = 15;\n    const col1_row0_row0 = col1_row0.addStack();\n    const col1_row0_row1 = col1_row0.addStack();\n    col1_row0_row0.layoutVertically();\n    col1_row0_row1.layoutVertically();\n    col1_row0_row0.spacing = 8;\n    col1_row0_row1.spacing = 8;\n    const t_space0 = col1_row0_row0.addStack();\n    const t_space2 = col1_row0_row0.addStack();\n    const t_space1 = col1_row0_row1.addStack();\n    const t_space3 = col1_row0_row1.addStack();\n    t_space0.layoutVertically();\n    t_space1.layoutVertically();\n    t_space2.layoutVertically();\n    t_space3.layoutVertically();\n\n    const header0 = t_space0.addText(\"总里程\");\n    const header1 = t_space1.addText(\"电池续航\");\n    const header2 = t_space2.addText(is_mix ? \"油箱续航\" : \"车内温度\");\n    const header3 = t_space3.addText(\"位置\");\n    const content_container0 = t_space0.addStack();\n    const content_container1 = t_space1.addStack();\n    const content_container2 = t_space2.addStack();\n    const content_container3 = t_space3.addStack();\n\n    [\n      content_container0,\n      content_container1,\n      content_container2,\n      content_container3,\n    ].map((c) => {\n      c.spacing = 5;\n      c.bottomAlignContent();\n    });\n    const content0 = content_container0.addText(total_odometer + \"\");\n    const unit0 = content_container0.addText(\"km\");\n    const content1 = content_container1.addText(remained_power_mile + \"\");\n    const unit1 = content_container1.addText(\"km\");\n    const content2 = content_container2.addText(\n      is_mix ? remained_oil_mile + \"\" : vehicle_temperature + \"\"\n    );\n    const unit2 = content_container2.addText(is_mix ? \"km\" : \"°C\");\n    const content3 = content_container3.addText(location_str);\n    const header_list = [header0, header1, header2, header3];\n    const content_list = [content0, content1, content2, content3];\n    const unit_list = [unit0, unit1, unit2];\n    header_list.map((h) => {\n      h.font = Font.thinMonospacedSystemFont(12);\n      h.textColor = Color.gray();\n    });\n    content_list.map((c) => {\n      c.font = Font.boldSystemFont(18);\n      c.textColor = Color.white();\n      c.minimumScaleFactor = 0.3;\n    });\n    unit_list.map((u) => {\n      u.font = Font.mediumMonospacedSystemFont(14);\n      u.textColor = Color.gray();\n    });\n  }\n  if (token == \"\" || token == null || token == undefined){\n    console.error(\"请先配置refresh_token\")\n    const t = LW.addText(\"请先配置refresh_token\")\n    t.font = Font.boldSystemFont(18);\n    t.textColor = Color.red()\n  }\n  console.log(\"渲染结束\");\n}\n\nasync function loadText(textUrl) {\n  const req = new Request(textUrl);\n  return await req.load();\n}\nasync function getService(name, url, force_download) {\n  let fm \n  try{\n    fm = FileManager.iCloud();\n  }catch{\n    fm = FileManager.local();\n  }\n  const script_dir = module.filename.replace(\n    fm.fileName(module.filename, true),\n    \"\"\n  );\n  let service_dir = fm.joinPath(script_dir, \"lib\/service\/\" + name);\n\n  if (!fm.fileExists(service_dir)) {\n    fm.createDirectory(service_dir, true);\n  }\n\n  let lib_file = fm.joinPath(script_dir, \"lib\/service\/\" + name + \"\/index.js\");\n\n  if (fm.fileExists(lib_file) && !force_download) {\n    try{\n      fm.downloadFileFromiCloud(lib_file);\n    }catch(e){\n\n    }\n  } else {\n    \/\/ download once\n    let indexjs = await loadText(url);\n    fm.write(lib_file, indexjs);\n  }\n\n  let service = importModule(\"lib\/service\/\" + name);\n\n  return service;\n}\n\n",
  "share_sheet_inputs" : [

  ]
}