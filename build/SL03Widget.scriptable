{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "pink",
    "glyph" : "magic"
  },
  "name" : "SL03Widget",
  "script" : "\/**\n * iOS widget --- 长安深蓝SL03桌面小组件\n * 项目地址: https:\/\/github.com\/zkytech\/iOS14-widgets-for-scriptable\n * \n * 传入以下参数: refresh_token\n * 参数获取方法见文档: https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable#4-%E6%B7%B1%E8%93%9Dsl03%E8%BD%A6%E8%BE%86%E7%8A%B6%E6%80%81\n * - 组件依赖深蓝APP登录信息（refresh_token）\n * - 本组件仅用于学习交流\n * - 本组件为开源软件，不会进行收费！！！\n * \n * \n * \n*\/\n\nconst LW = new ListWidget() \/\/ widget对象\n\nlet presentSize = \"medium\" \/\/ 预览组件的大小\n\/\/ const mainColor = new Color(\"#30336b\")\nconst mainColor = new Color(\"#000000\")\nconst car_img_url = \"https:\/\/cdn.jsdelivr.net\/gh\/zkytech\/iOS14-widgets-for-scriptable@master\/statics\/%E4%BE%A7%E9%9D%A2%E7%99%BD%E8%89%B2.PNG\"\nlet project_id=''\nlet global_refresh_token=''\nif (config.runsInWidget) {  \n    const params = args.widgetParameter ? args.widgetParameter.split(\",\") : []\n    global_refresh_token = params[0]\n}\npresentSize = \"medium\"\nawait renderCarStatus()\n\n\/\/ 获取carId\nasync function getCarId(token){\n    console.log(\"开始获取carId\")\n    const req = new Request(\"https:\/\/app-api.deepal.com.cn\/appapi\/v1\/message\/msg\/cars\")\n    req.method = \"POST\"\n    req.body = JSON.stringify({\n        \"vcs-app-id\" : \"inCall\",\n        \"token\" : token,\n        \"type\" : \"1\"\n    })\n    req.headers = {\n        \"Content-Type\" :\"application\/json\"\n    }\n    const result = await req.loadJSON()\n    if(result[\"success\"]){\n        return result[\"data\"][0].carId\n    }else{\n        return null\n    }\n}\n\n\/\/ 获取token\nasync function getToken(){\n    console.log(\"开始获取token\")\n    const fm = FileManager.iCloud()\n    const refresh_token_file_path = fm.documentsDirectory() + \"\/refresh_token\"\n    fm.downloadFileFromiCloud(refresh_token_file_path)\n    let local_refresh_token = \"\"\n    if(fm.fileExists(refresh_token_file_path)){\n        local_refresh_token = fm.readString(refresh_token_file_path)\n    }\n    const req = new Request(\"https:\/\/app-api.deepal.com.cn\/appapi\/v1\/member\/ms\/refreshCacToken\")\n    req.method = \"POST\"\n    req.body = JSON.stringify({\n        \"refreshToken\":local_refresh_token != \"\" ?local_refresh_token:global_refresh_token\n    })\n    req.headers = {\n       \"Content-Type\" :\"application\/json\"\n    }\n    const result = await req.loadJSON()\n    if(result[\"success\"]){\n        const refresh_token = result[\"data\"][\"refresh_token\"]\n        const access_token = result[\"data\"][\"access_token\"]\n        fm.writeString(refresh_token_file_path,refresh_token)\n        return access_token\n    }else{\n        console.error(\"token refresh failed\")\n        if(global_refresh_token && global_refresh_token != local_refresh_token && result[\"success\"] == false){\n          fm.writeString(refresh_token_file_path,global_refresh_token)\n          return getToken()\n        }\n        \n        return null\n    }\n\n}\n\n\/\/ 发出命令刷新车辆数据(异步)--无效\nasync function refreshCarData(project_id){\n    console.log(\"开始刷新车辆状态数据\")\n    const stm = new Date().getTime()\n    const req = new Request(`https:\/\/cbd-api.changan.com.cn:9092\/v3\/projects\/${project_id}\/collect?stm=${stm}`)\n    req.method = \"POST\"\n    await req.loadString()\n}\n\n\/\/ 获取车辆状态数据\nasync function getCarStatus(token,car_id){\n    console.log(\"开始获取车辆状态数据\")\n    const req2 = new Request(`https:\/\/m.iov.changan.com.cn\/app2\/api\/car\/data?keys=*&carId=${car_id}&token=${token}`)\n    req2.method = \"POST\"\n    const car_status = await req2.loadJSON()\n    if (car_status[\"success\"]){\n        return car_status[\"data\"]\n    }else{\n        return null\n    }\n}\n\n\/\/ 获取车辆基本信息\nasync function getCarInfo(token,car_id){\n  console.log(\"开始获取车辆基本信息数据\")\n  const req = new Request(`https:\/\/m.iov.changan.com.cn\/app2\/api\/v2\/car\/detail?carId=${car_id}&token=${token}`)\n  req.method = \"GET\"\n  const car_info = await req.loadJSON()\n  if(car_info[\"success\"]){\n      return car_info[\"data\"] \n  }else{\n      return null\n  }\n      \n}\n\n\/\/ 获取车辆位置信息\nasync function getCarLocation(token,car_id){\n  console.log(\"开始获取车辆位置信息\")\n  const req = new Request(`https:\/\/m.iov.changan.com.cn\/appserver\/api\/cardata\/getCarLocation?carId=${car_id}&mapType=GCJ02&token=${token}`)\n  req.method = \"POST\"\n  const car_location = await req.loadJSON()\n  if(car_location[\"success\"]){\n      return car_location[\"data\"]  \n  }else{\n      return null\n  }\n}\n\n\/\/ 绘制电量条\nfunction drawPowerImage(remain_power,remain_power_mile){\n    const draw = new DrawContext()\n    const width = 300\n    const height = 18\n    draw.size = new Size(width,height)\n    draw.setFillColor(Color.white())\n    draw.fillRect(new Rect(0,0,width,height))\n    draw.setFillColor(Color.green())\n    draw.fillRect(new Rect(0,0,width*(Number(remain_power)\/100),height))\n        draw.setTextAlignedCenter()\n    draw.setFont(new Font(\"Avenir-Book\",17))\n    draw.drawTextInRect(`${remain_power}%\\t${remain_power_mile} km`, new Rect(0,0,width,height))\n\n    const img = draw.getImage()\n     \/\/ QuickLook.present(img, false)\n      return img\n}\n\n\n\n\/\/ 从URL加载图片\nasync function loadImage(url) {\n\t\tconst req = new Request(url)\n\t\treturn await req.loadImage()\n}\n\n\n\nasync function renderCarStatus(){\n     const token = await getToken()\n    console.log(\"token:\" + token)\n     const car_id = await getCarId(token)\n    console.log(\"car_id:\" + car_id)\n     \/\/ await refreshCarData()  \n     const car_status = await getCarStatus(token,car_id)\n     const car_info = await getCarInfo(token,car_id)\n     const car_location = await getCarLocation(token,car_id)\n    \n        if(car_status != null && car_info != null && car_location != null){\n            \/\/ 数据更新时间\n            const update_time = car_status.terminalTime\n            \/\/ 总里程\n            const total_odometer = Math.round(car_status.totalOdometer)\n            \/\/ 车内温度\n            const vehicle_temperature = Math.round(car_status.vehicleTemperature)\n            \/\/ 剩余里程\n            const remained_power_mile = Math.round(car_status.remainedPowerMile)\n            \/\/ 剩余电量\n            const remain_power = Math.round(car_status.remainPower)\n            \/\/ 车辆名称\n            const car_name = car_info.carName\n            \/\/ 车辆配置名称，比如：515km\n            const conf_name = car_info.confName.split(\"，\")[2]\n            \/\/ 车牌号\n            const plate_number = car_info.plateNumber\n            \/\/ 型号\n            const series_name = car_info.seriesName\n            \/\/ 车辆位置\n            const location_str = car_location.addrDesc\n            \/\/ 车门状态\n            const lock_status = car_status.driverDoorLock == 0 && car_status.passengerDoorLock == 0\n            \/\/ 是否为增程车型\n            const is_mix = car_status.remainedOilMile != undefined\n            \/\/ 增城续航里程\n            const remained_oil_mile = is_mix ? Math.round(car_status.remainedOilMile) : \"\"\n            \n            \/\/const power_img = LW.addImage(drawPowerImage(remain_power,remained_power_mile))\n            \/\/power_img.cornerRadius=5\n            \/\/power_img.imageSize=new Size(300,18) \n            \/**\n              |    col0 |   col1_0|   col1_1 |\n            * |---------|---------|----------|\n            * |         | 总里程   | 续航里程  |\n            * | 车辆图片 |  xxx公里 |   xx%   |\n            * |         | t_space0| t_space1  |\n            * | ------- |----------|---------|\n            * | 车辆名称 |  温度     | 位置     |\n            * | ------- | xx摄氏度. | xxx省xxx市 |\n              |         | t_space2 | t_space3  |\n            * | 车牌号   |---------------------｜\n              ｜        ｜ 数据更新时间          |\n              | col0   |        col1           |\n            *\/\n            const container = LW.addStack()\n            container.layoutHorizontally()\n            container.spacing = 15\n            \/\/ 第1列\n            const col0 = container.addStack()\n            col0.layoutVertically()\n            col0.spacing = 6\n            col0.size = new Size(110,0)\n            \/\/ 车辆图片\n            const car_img =await loadImage(car_img_url)\n            const car_stack = col0.addStack()\n            \n            const img_container = car_stack.addImage(car_img)\n           \n            img_container.imageSize = new Size(100,50)\n            \/\/ 车辆名称、型号\n            const car_name_container = col0.addStack()\n            \n            car_name_container.layoutHorizontally()\n            car_name_container.spacing = 3\n            car_name_container.bottomAlignContent()\n\n            \/\/ 车辆名称\n            const car_name_text = car_name_container.addText(car_name)\n            car_name_text.font = Font.boldSystemFont(15)\n            car_name_text.textColor = Color.white()\n\n            \/\/car_name_text.minimumScaleFactor = 1\n            const lock_icon = car_name_container.addImage(lock_status ? SFSymbol.named(\"lock.fill\").image:SFSymbol.named(\"lock.open.fill\").image)\n            \/\/ = SFSymbol.named(\"lock.open.fill\")\n            lock_icon.tintColor = lock_status ? new Color(\"#27ae60\") : new Color(\"#c0392b\")\n            lock_icon.imageSize = new Size(15,15)\n            const car_seires_container = col0.addStack()\n            \/\/ 车辆logo\n            const logo = car_seires_container.addImage(await loadImage(\"https:\/\/deepal.com.cn\/202303112321\/share_logo.png\"))\n            logo.imageSize = new Size(12, 12)\n            \/\/ 车辆型号\n            const car_series_text = car_seires_container.addText(series_name + \" \" + conf_name)\n            car_series_text.font = Font.mediumSystemFont(11)\n            car_series_text.textColor = new Color(\"#bdc3c7\")\n            \/\/car_series_text.minimumScaleFactor = 0.5\n\n            \n            \/\/ 车牌号\n            const plate_number_text = col0.addText(plate_number)\n            plate_number_text.font = Font.thinMonospacedSystemFont(10)\n            plate_number_text.textColor = new Color(\"#bdc3c7\")\n            \/\/car_series_text.minimumScaleFactor = 0.5   \n                  \n            \/\/ 第2列\n            const col1 = container.addStack()\n            \n            col1.layoutVertically()\n            col1.spacing = 8\n            const col1_row0 = col1.addStack()\n            const col1_row1 = col1.addStack()\n            col1_row1.layoutHorizontally()\n            col1_row1.spacing = 5\n            \n\n            const refresh_icon = col1_row1.addImage(SFSymbol.named(\"arrow.clockwise\").image)\n            refresh_icon.tintColor = Color.gray()\n            refresh_icon.imageSize = new Size(13, 13)\n            const refresh_time_text = col1_row1.addText(update_time)\n            refresh_time_text.textColor = Color.gray()\n            refresh_time_text.font = Font.thinMonospacedSystemFont(13)\n            \n              \n            col1_row0.layoutHorizontally()\n            col1_row0.spacing = 15\n            const col1_row0_row0 = col1_row0.addStack()\n            const col1_row0_row1 = col1_row0.addStack()\n            col1_row0_row0.layoutVertically()\n            col1_row0_row1.layoutVertically()\n            col1_row0_row0.spacing = 8\n            col1_row0_row1.spacing = 8\n            const t_space0 = col1_row0_row0.addStack()\n            const t_space2 = col1_row0_row0.addStack()\n            const t_space1 = col1_row0_row1.addStack()\n            const t_space3 = col1_row0_row1.addStack()\n            t_space0.layoutVertically()\n            t_space1.layoutVertically()\n            t_space2.layoutVertically()\n            t_space3.layoutVertically()\n            \n            const header0 = t_space0.addText(\"总里程\")\n            const header1 = t_space1.addText(\"电池续航\")\n            const header2 = t_space2.addText(is_mix ? \"油箱续航\":\"车内温度\")\n            const header3 = t_space3.addText(\"位置\")\n            const content_container0 = t_space0.addStack()\n            const content_container1 = t_space1.addStack()\n            const content_container2 = t_space2.addStack()\n            const content_container3 = t_space3.addStack();\n            \n            [content_container0,content_container1,content_container2,content_container3].map(c => {c.spacing=5;c.bottomAlignContent()})\n            const content0 = content_container0.addText(total_odometer + \"\")\n            const unit0 = content_container0.addText(\"km\")\n            const content1 = content_container1.addText(remained_power_mile + \"\")\n            const unit1 = content_container1.addText(\"km\")\n            const content2 = content_container2.addText(is_mix ? remained_oil_mile + \"\" : vehicle_temperature + \"\" )\n            const unit2 = content_container2.addText(is_mix ? \"km\":\"°C\")\n            const content3 = content_container3.addText(location_str)\n            const header_list = [header0,header1,header2,header3]\n            const content_list = [content0,content1,content2,content3]\n            const unit_list = [unit0,unit1,unit2]\n            header_list.map(h => {\n                h.font = Font.thinMonospacedSystemFont(12)\n                h.textColor = Color.gray()\n            })\n            content_list.map(c => {\n                c.font = Font.boldSystemFont(18)\n                c.textColor = Color.white()\n                c.minimumScaleFactor = 0.3\n            })\n            unit_list.map(u => {\n                u.font = Font.mediumMonospacedSystemFont(14)\n                u.textColor = Color.gray()\n            })\n        }\n        console.log(\"渲染结束\")\n    \n}\n\n\n\nLW.backgroundColor = mainColor\n\/\/ LW.backgroundGradient = gradient\n\nif (!config.runsInWidget) {\n    if (presentSize == \"large\") {\n        await LW.presentLarge()\n    }\n    if (presentSize == \"medium\") {\n        await LW.presentMedium()\n    }\n    if (presentSize == \"small\") {\n        await LW.presentSmall()\n    }\n}\n\n\nScript.setWidget(LW)\n\nScript.complete()\n\n\n\/**\n * 自动更新\n *\/\nasync function update(){\n    const fm = FileManager.iCloud()\n    const folder = fm.documentsDirectory()\n    const req = new Request(\"https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/master\/scripts\/SL03Widget.js\")\n    let scriptTxt =await req.loadString()\n    const filename = `\/${Script.name()}.js`\n    if (req.response.statusCode == 200){\n        fm.writeString(folder + filename, scriptTxt)\n    }\n    \n}\n\n\nawait update()",
  "share_sheet_inputs" : [

  ]
}