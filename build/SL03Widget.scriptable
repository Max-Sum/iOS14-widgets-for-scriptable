{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "blue",
    "glyph" : "car"
  },
  "name" : "SL03Widget",
  "script" : "\/\/ Variables used by Scriptable.\n\/\/ These must be at the very top of the file. Do not edit.\n\/\/ icon-color: blue; icon-glyph: car;\n\/**\n * iOS widget --- 长安深蓝SL03桌面小组件\n * 项目地址: https:\/\/github.com\/zkytech\/iOS14-widgets-for-scriptable\n * 联系邮箱: zhangkunyuan@hotmail.com\n *\n * \n * 参数获取和填写方法见文档: https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable#4-%E6%B7%B1%E8%93%9Dsl03%E8%BD%A6%E8%BE%86%E7%8A%B6%E6%80%81\n * - 组件依赖深蓝APP登录信息（refresh_token）\n * - 本组件仅用于学习交流\n * - 本组件为开源软件，不会进行收费！！！\n\n *\n *\n * - 不要在脚本里填token，所有参数必须通过组件设置界面填写\n *\/\n\/\/ 开发时切换到dev分支\nconst branch = \"master\";\nconst force_download = true;\nconst project_name = \"深蓝小组件_by_zkytech\";\n\/\/ const force_download = branch != \"master\";\n\nconst {\n  getCarId,\n  getToken,\n  refreshCarData,\n  getCarStatus,\n  getCarInfo,\n  getCarLocation,\n  getChargeStatus\n} = await getService(\n  \"SL03Api\",\n  `https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/${branch}\/scripts\/lib\/service\/SL03Api.js`,\n  force_download\n);\nconst { update } = await getService(\n  \"UpdateScript\",\n  `https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/${branch}\/scripts\/lib\/service\/UpdateScript.js`,\n  force_download\n);\nlet { getDataFromSettings, saveDataToSettings } = await getService(\n  \"Settings\",\n  `https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/${branch}\/scripts\/lib\/service\/Settings.js`,\n  force_download\n);\n\nfunction getSetting(key) {\n  return getDataFromSettings(project_name, key);\n}\nfunction saveSetting(key, value) {\n  return saveDataToSettings(project_name, key, value);\n}\n\nif (branch == \"master\") {\n  \/\/ 更新组件代码\n  await update(\n    `https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/${branch}\/scripts\/SL03Widget.js`\n  );\n}\nif (config.runsInWidget) {\n  if (config.widgetFamily == \"medium\") {\n    await renderMediumWidget();\n  } else if (config.widgetFamily == \"accessaryCircular\") {\n    await renderAccessaryCircularWidget();\n  } else {\n    renderWrongSizeAlert();\n  }\n} else {\n  \/\/ 在Scriptable中运行，弹出设置窗口\n  await askSettings();\n}\n\n\n\/**\n * 小号锁屏组件\n * 接受参数 - 显示模式，油\/电\n *\/\nasync function renderAccessaryCircularWidget() {\n  const { drawArc } = await getService(\n    \"DrawShape\",\n    `https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\/raw\/${branch}\/scripts\/lib\/service\/DrawShape.js`,\n    force_download\n  );\n  const params = args.widgetParameter ? args.widgetParameter.split(\",\") : [\"\"];\n  let mode = \"电\";\n  if (params.length >= 1) mode = params[0].trim() == \"油\" ? \"油\" : \"电\";\n  const LW = new ListWidget(); \/\/ widget对象\n  let token;\n  let refresh_token = getRefreshToken();\n  const token_result = await getToken(refresh_token);\n  if (token_result == null) {\n    token = null;\n  } else {\n    refresh_token = token_result.refresh_token;\n    token = token_result.access_token;\n    if (\n      refresh_token != \"\" &&\n      refresh_token != undefined &&\n      refresh_token != null\n    ) {\n      console.log(\"保存新的refresh_token\");\n      saveSetting(\"refresh_token\", refresh_token);\n    }\n  }\n\n  const car_id = await getCarId(token);\n  const car_status = await getCarStatus(token, car_id);\n  const charge_status = await getChargeStatus(token, car_id);\n  const is_charging = charge_status.chrgStatus != \"3\"\n  if (car_status && car_id) {\n    \/\/ 剩余电量\n    let remain_power =\n      car_status.remainPower == undefined || car_status.remainPower < 0\n        ? 0\n        : car_status.remainPower;\n    let remained_oil_mile = car_status.RemainedOilMile;\n    \/\/ 增程车型存在API数据错乱的问题，为了避免受到API错误数据的影响自动取上一次获取到的合理数据\n    if (remain_power && remain_power > 0) {\n      saveSetting(\"remain_power\", remain_power);\n    } else {\n      remain_power = getSetting(\"remain_power\");\n      remain_power = remain_power ? remain_power : 0;\n    }\n    if (remained_oil_mile && remained_oil_mile > 0) {\n      saveSetting(\"remained_oil_mile\", remained_oil_mile);\n    } else {\n      remained_oil_mile = getSetting(\"remained_oil_mile\");\n      remained_oil_mile = remained_oil_mile ? remained_oil_mile : 0;\n    }\n\n    const remain_oil = (remained_oil_mile \/ 846) * 100;\n    const circle = await drawArc(LW, mode == \"电\" ? remain_power : remain_oil);\n\n    const car_symbol_name = mode == \"电\" ? (is_charging ? \"bolt.car.fill\" :\"car.rear.fill\") : \"fuelpump.fill\";\n    const sf_car = circle.addImage(SFSymbol.named(car_symbol_name).image);\n    sf_car.imageSize = new Size(29, 29);\n    sf_car.tintColor = Color.white();\n  }\n\n  if (token == \"\" || token == null || token == undefined) {\n    console.error(\"请先配置refresh_token\");\n    LW.addText(\"请先配置refresh_token\");\n  }\n\n  LW.presentAccessoryCircular();\n\n  Script.setWidget(LW);\n  Script.complete();\n}\n\n\/**\n * 中等桌面组件\n * 接受参数 - refresh_token\n *\/\nasync function renderMediumWidget() {\n  const params = args.widgetParameter ? args.widgetParameter.split(\",\") : [\"\"];\n  param_refresh_token = params.length > 0 ? params[0].trim() : \"\";\n  if (param_refresh_token && !getRefreshToken()) {\n    saveSetting(\"refresh_token\", param_refresh_token);\n  }\n  const LW = new ListWidget(); \/\/ widget对象\n  LW.backgroundColor = Color.black();\n  let token;\n  let refresh_token = getRefreshToken();\n  const token_result = await getToken(refresh_token);\n  if (token_result == null) {\n    token = null;\n  } else {\n    refresh_token = token_result.refresh_token;\n    token = token_result.access_token;\n    if (\n      refresh_token != \"\" &&\n      refresh_token != undefined &&\n      refresh_token != null\n    ) {\n      console.log(\"保存新的refresh_token\");\n      saveSetting(\"refresh_token\", refresh_token);\n    }\n  }\n  const car_id = await getCarId(token);\n  \/\/ await refreshCarData()\n  const car_status = await getCarStatus(token, car_id);\n  const car_info = await getCarInfo(token, car_id);\n  const car_location = await getCarLocation(token, car_id);\n  const charge_status = await getChargeStatus(token, car_id);\n  if (car_status != null && car_info != null && car_location != null ) {\n    \/\/ 数据更新时间\n    const update_time = car_status.terminalTime;\n    \/\/ 总里程\n    const total_odometer = Math.round(car_status.totalOdometer);\n    \/\/ 车内温度\n    const vehicle_temperature = Math.round(car_status.vehicleTemperature);\n    \/\/ 剩余里程\n    let remained_power_mile = Math.round(car_status.remainedPowerMile);\n    \/\/ 剩余电量\n    const remain_power = Math.round(car_status.remainPower);\n    \/\/ 车辆名称\n    const car_name = car_info.carName;\n    \/\/ 车辆配置名称，比如：515km\n    const conf_name = car_info.confName ? car_info.confName.split(\"，\")[2] : \"\";\n    \/\/ 车牌号\n    const plate_number = car_info.plateNumber;\n    \/\/ 型号\n    const series_name = car_info.seriesName;\n    \/\/ 车辆位置\n    const location_str = car_location.addrDesc;\n    \/\/ 车门状态\n    const lock_status =\n      car_status.driverDoorLock == 0 && car_status.passengerDoorLock == 0;\n    \/\/ 是否为增程车型\n    const is_mix = car_status.remainedOilMile != undefined;\n    \/\/ 是否在充电\n    const is_charging = charge_status.chrgStatus != \"3\"\n    \/\/ 增城续航里程\n    let remained_oil_mile = is_mix ? Math.round(car_status.remainedOilMile) : 0;\n    \/\/ 增程车型存在API数据错乱的问题，这里为了受到API错误数据的影响自动取上一次获取到的合理数据\n    if (remain_power && remain_power > 0) {\n      saveSetting(\"remain_power\", remain_power);\n    } else {\n      remain_power = getSetting(\"remain_power\");\n      remain_power = remain_power ? remain_power : 0;\n    }\n    if (remained_power_mile && remained_power_mile > 0) {\n      saveSetting(\"remained_power_mile\", remained_power_mile);\n    } else {\n      remained_power_mile = getSetting(\"remained_power_mile\");\n      remained_power_mile = remained_power_mile ? remained_power_mile : 0;\n    }\n    if (remained_oil_mile && remained_oil_mile > 0) {\n      saveSetting(\"remained_oil_mile\", remained_oil_mile);\n    } else {\n      remained_oil_mile = getSetting(\"remained_oil_mile\");\n      remained_oil_mile = remained_oil_mile ? remained_oil_mile : 0;\n    }\n\n    \/\/const power_img = LW.addImage(drawPowerImage(remain_power,remained_power_mile))\n    \/\/power_img.cornerRadius=5\n    \/\/power_img.imageSize=new Size(300,18)\n    \/**\n        |    col0 |   col1_0|   col1_1 |\n        |---------|---------|----------|\n        |         | 总里程   | 续航里程  |\n        | 车辆图片 |  xxxkm |   xxkm   |\n        |         | t_space0| t_space1  |\n        | ------- |----------|---------|\n        | 车辆名称 |  温度     | 位置     |\n        | ------- | xx摄氏度. | xxx省xxx市 |\n        |         | t_space2 | t_space3  |\n        | 车牌号   |---------------------｜\n        |        | 数据更新时间          |\n        | col0   |        col1           |\n    *\/\n    const container = LW.addStack();\n    container.layoutHorizontally();\n    container.spacing = 15;\n    \/\/ 第1列\n    const col0 = container.addStack();\n    col0.layoutVertically();\n    col0.spacing = 6;\n    col0.size = new Size(110, 0);\n    \/\/ 车辆图片\n    const car_img = await loadImage(\"车\");\n    const car_stack = col0.addStack();\n\n    const img_container = car_stack.addImage(car_img);\n\n    img_container.imageSize = new Size(100, 50);\n    \/\/ 车辆名称、型号\n    const car_name_container = col0.addStack();\n\n    car_name_container.layoutHorizontally();\n    car_name_container.spacing = 3;\n    car_name_container.bottomAlignContent();\n\n    \/\/ 车辆名称\n    const car_name_text = car_name_container.addText(car_name);\n    car_name_text.font = Font.boldSystemFont(15);\n    car_name_text.textColor = Color.white();\n\n    \/\/car_name_text.minimumScaleFactor = 1\n    const lock_icon = car_name_container.addImage(\n      lock_status\n        ? SFSymbol.named(\"lock.fill\").image\n        : SFSymbol.named(\"lock.open.fill\").image\n    );\n    const charge_icon = car_name_container.addImage(SFSymbol.named(\"bolt.fill\").image)\n    \/\/ = SFSymbol.named(\"lock.open.fill\")\n    lock_icon.tintColor = lock_status\n      ? new Color(\"#27ae60\")\n      : new Color(\"#c0392b\");\n    charge_icon.tintColor = is_charging ? new Color(\"#27ae60\") : Color.gray();\n    lock_icon.imageSize = new Size(15, 15);\n    charge_icon.imageSize = new Size(15,15)\n    const car_seires_container = col0.addStack();\n    \/\/ 车辆logo\n    const logo = car_seires_container.addImage(await loadImage(\"LOGO\"));\n    logo.imageSize = new Size(12, 12);\n    \/\/ 车辆型号\n    const user_defined_series_name = getSetting(\"car_series_name\");\n    const car_series_text = car_seires_container.addText(\n      user_defined_series_name\n        ? user_defined_series_name\n        : series_name + \" \" + conf_name\n    );\n    car_series_text.font = Font.mediumSystemFont(11);\n    car_series_text.textColor = new Color(\"#bdc3c7\");\n    \/\/car_series_text.minimumScaleFactor = 0.5\n\n    \/\/ 车牌号\n    const plate_number_text = col0.addText(plate_number);\n    plate_number_text.font = Font.thinMonospacedSystemFont(10);\n    plate_number_text.textColor = new Color(\"#bdc3c7\");\n    \/\/car_series_text.minimumScaleFactor = 0.5\n\n    \/\/ 第2列\n    const col1 = container.addStack();\n\n    col1.layoutVertically();\n    col1.spacing = 8;\n    const col1_row0 = col1.addStack();\n    const col1_row1 = col1.addStack();\n    col1_row1.layoutHorizontally();\n    col1_row1.spacing = 5;\n\n    const refresh_icon = col1_row1.addImage(\n      SFSymbol.named(\"arrow.clockwise\").image\n    );\n    refresh_icon.tintColor = Color.gray();\n    refresh_icon.imageSize = new Size(13, 13);\n    const refresh_time_text = col1_row1.addText(update_time);\n    refresh_time_text.textColor = Color.gray();\n    refresh_time_text.font = Font.thinMonospacedSystemFont(13);\n\n    col1_row0.layoutHorizontally();\n    col1_row0.spacing = 15;\n    const col1_row0_row0 = col1_row0.addStack();\n    const col1_row0_row1 = col1_row0.addStack();\n    col1_row0_row0.layoutVertically();\n    col1_row0_row1.layoutVertically();\n    col1_row0_row0.spacing = 8;\n    col1_row0_row1.spacing = 8;\n    const t_space0 = col1_row0_row0.addStack();\n    const t_space2 = col1_row0_row0.addStack();\n    const t_space1 = col1_row0_row1.addStack();\n    const t_space3 = col1_row0_row1.addStack();\n    t_space0.layoutVertically();\n    t_space1.layoutVertically();\n    t_space2.layoutVertically();\n    t_space3.layoutVertically();\n\n    const header0 = t_space0.addText(is_mix ? \"油箱续航\" : \"总里程\");\n    const header1 = t_space1.addText(\"电池续航\");\n    const header2 = t_space2.addText(is_mix ? \"总里程\" : \"车内温度\");\n    const header3 = t_space3.addText(\"位置\");\n    const content_container0 = t_space0.addStack();\n    const content_container1 = t_space1.addStack();\n    const content_container2 = t_space2.addStack();\n    const content_container3 = t_space3.addStack();\n\n    [\n      content_container0,\n      content_container1,\n      content_container2,\n      content_container3,\n    ].map((c) => {\n      c.spacing = 5;\n      c.bottomAlignContent();\n    });\n    const content0 = content_container0.addText(is_mix ? remained_oil_mile :total_odometer + \"\");\n    const unit0 = content_container0.addText(\"km\");\n    const content1 = content_container1.addText(remained_power_mile + \"\");\n    const unit1 = content_container1.addText(\"km\");\n    const content2 = content_container2.addText(\n      is_mix ? total_odometer + \"\" : vehicle_temperature + \"\"\n    );\n    const unit2 = content_container2.addText(is_mix ? \"km\" : \"°C\");\n    const content3 = content_container3.addText(location_str);\n    const header_list = [header0, header1, header2, header3];\n    const content_list = [content0, content1, content2, content3];\n    const unit_list = [unit0, unit1, unit2];\n    header_list.map((h) => {\n      h.font = Font.thinMonospacedSystemFont(12);\n      h.textColor = Color.gray();\n    });\n    content_list.map((c) => {\n      c.font = Font.boldSystemFont(18);\n      c.textColor = Color.white();\n      c.minimumScaleFactor = 0.3;\n    });\n    unit_list.map((u) => {\n      u.font = Font.mediumMonospacedSystemFont(14);\n      u.textColor = Color.gray();\n    });\n  }\n  if (token == \"\" || token == null || token == undefined) {\n    console.error(\"请先配置refresh_token\");\n    const t = LW.addText(\n      \"请先在scriptable app中直接运行此脚本并配置refresh_token\"\n    );\n    t.font = Font.boldSystemFont(18);\n    t.textColor = Color.red();\n  }\n  console.log(\"渲染结束\");\n  await LW.presentMedium();\n  Script.setWidget(LW);\n  Script.complete();\n}\nfunction getFileManager() {\n  let fm;\n  try {\n    fm = FileManager.iCloud();\n  } catch {\n    fm = FileManager.local();\n  }\n  return fm;\n}\n\nfunction renderWrongSizeAlert() {\n  const LW = new ListWidget();\n  const alert_text = LW.addText(\n    \"本组件只支持中等大小，请重新添加中等大小桌面组件\"\n  );\n  alert_text.textColor = Color.red();\n  LW.present();\n  Script.setWidget(LW);\n  Script.complete();\n}\n\nfunction getImageDir() {\n  const fm = getFileManager();\n  const script_dir = fm.documentsDirectory();\n  let img_dir = fm.joinPath(script_dir, \"imgs\");\n  if (!fm.fileExists(img_dir)) {\n    fm.createDirectory(img_dir, true);\n  }\n  return img_dir;\n}\n\n\/\/ 加载图片\nasync function loadImage(name) {\n  const img_map = {\n    车: \"https:\/\/i.328888.xyz\/2023\/03\/17\/LFK8Z.md.png\",\n    LOGO: \"https:\/\/deepal.com.cn\/202303112321\/share_logo.png\",\n  };\n  const user_defined_settings_name_map = {\n    车: \"car_img_path\",\n    LOGO: \"logo_img_path\",\n  };\n\n  const img_url = img_map[name];\n  const file_name = img_url.split(\"\/\")[img_url.split(\"\/\").length - 1];\n  const fm = getFileManager();\n\n  let img_dir = getImageDir();\n\n  if (!fm.fileExists(img_dir)) {\n    fm.createDirectory(img_dir, true);\n  }\n  let img_file = fm.joinPath(img_dir, file_name + \".png\");\n\n  if (fm.fileExists(img_file)) {\n    console.log(`从本地缓存中加载图片:${name}`);\n    try {\n      fm.downloadFileFromiCloud(img_file);\n    } catch (e) {}\n  } else {\n    \/\/ download once\n    console.log(`开始下载图片:${name}`);\n    const req = new Request(img_url);\n    const img = await req.loadImage();\n    fm.writeImage(img_file, img);\n  }\n  \/\/ 优先使用用户自定义的图片\n  const user_defined_settings_key = user_defined_settings_name_map[name];\n  const user_defined_img_path = getSetting(user_defined_settings_key);\n  if (user_defined_img_path && fm.fileExists(user_defined_img_path)) {\n    return fm.readImage(user_defined_img_path);\n  } else {\n    return fm.readImage(img_file);\n  }\n}\n\nfunction getRefreshToken() {\n  const fm = getFileManager();\n  const script_dir = fm.documentsDirectory();\n  const old_refresh_token_path = fm.joinPath(script_dir, \"refresh_token\");\n  \/\/ 处理历史遗留问题，将老版本的refresh_token文件统一用新的settings.json替代\n  if (fm.fileExists(old_refresh_token_path)) {\n    const old_refresh_token = fm.readString(old_refresh_token_path);\n    saveSetting(\"refresh_token\", old_refresh_token);\n    fm.remove(old_refresh_token_path);\n  }\n  let refresh_token = getSetting(\"refresh_token\");\n  return refresh_token;\n}\n\nasync function getService(name, url, force_download) {\n  const fm = getFileManager();\n  const script_dir = fm.documentsDirectory();\n  let service_dir = fm.joinPath(script_dir, \"lib\/service\/\" + name);\n\n  if (!fm.fileExists(service_dir)) {\n    fm.createDirectory(service_dir, true);\n  }\n\n  let lib_file = fm.joinPath(script_dir, \"lib\/service\/\" + name + \"\/index.js\");\n\n  if (fm.fileExists(lib_file) && !force_download) {\n    try {\n      fm.downloadFileFromiCloud(lib_file);\n    } catch (e) {}\n  } else {\n    \/\/ download once\n    const req = new Request(url);\n    let indexjs = await req.load();\n    fm.write(lib_file, indexjs);\n  }\n\n  let service = importModule(\"lib\/service\/\" + name);\n\n  return service;\n}\n\nasync function previewWidget(){\n  const alert = new Alert()\n  alert.title = \"请选择预览内容\"\n  const preview_actions = [\n    {\n      \"title\":\"锁屏组件\",\n      \"action\" : async () => await renderAccessaryCircularWidget()\n    },\n    {\n      \"title\":\"桌面组件\",\n      \"action\" : async () => await renderMediumWidget()\n    }\n  ]\n  preview_actions.map((action) => {\n    alert.addAction(action.title);\n  });\n  alert.addCancelAction(\"取消\");\n  await alert\n    .presentAlert()\n    .then((action_index) => {\n      if (action_index >= 0) {\n        return preview_actions[action_index].action();\n      }\n    })\n\n}\n\n\n\/\/ 弹出操作选单，进行自定义设置\nasync function askSettings() {\n  const alert = new Alert();\n  alert.title = \"深蓝小组件设置\";\n  alert.message = \"created by @zkytech\";\n  const setting_actions = [\n    {\n      title: \"查看说明文档\",\n      action: async () => {\n        await Safari.open(\n          \"https:\/\/gitee.com\/zkytech\/iOS14-widgets-for-scriptable\"\n        );\n      },\n    },\n    {\n      title: \"设置refresh_token\",\n      action: async () => {\n        let my_alert = new Alert();\n        let refresh_token = getSetting(\"refresh_token\");\n        my_alert.title = \"请输入refresh_token\";\n        my_alert.addSecureTextField(\n          \"请输入refresh_token\",\n          refresh_token ? refresh_token : \"\"\n        );\n        my_alert.addCancelAction(\"取消\");\n        my_alert.addAction(\"保存\");\n        if ((await my_alert.present()) == 0) {\n          refresh_token = my_alert.textFieldValue(0);\n          saveSetting(\"refresh_token\", refresh_token);\n          await previewWidget();\n\n        } else console.log(\"取消\");\n      },\n    },\n    {\n      title: \"自定义车辆型号\",\n      action: async () => {\n        let my_alert = new Alert();\n        let car_series_name = getSetting(\"car_series_name\");\n        my_alert.title = \"请输入车辆型号\";\n        my_alert.addTextField(\n          \"请输入车辆型号\",\n          car_series_name ? car_series_name : \"\"\n        );\n        my_alert.addCancelAction(\"取消\");\n        my_alert.addAction(\"保存\");\n        if ((await my_alert.present()) == 0) {\n          car_series_name = my_alert.textFieldValue(0);\n          saveSetting(\"car_series_name\", car_series_name);\n          await previewWidget();\n        } else console.log(\"取消\");\n      },\n    },\n    {\n      title: \"自定义车辆图片\",\n      action: async () => {\n        const image = await Photos.fromLibrary();\n        if (!image) return;\n        const fm = getFileManager();\n        const img_dir = getImageDir();\n        const img_file_path = fm.joinPath(img_dir, \"car_img.jpg\");\n        fm.writeImage(img_file_path, image);\n        saveSetting(\"car_img_path\", img_file_path);\n        await previewWidget();\n\n      },\n    },\n    {\n      title: \"自定义LOGO图片\",\n      action: async () => {\n        const image = await Photos.fromLibrary();\n        if (!image) return;\n        const fm = getFileManager();\n        const img_dir = getImageDir();\n        const img_file_path = fm.joinPath(img_dir, \"logo.jpg\");\n        fm.writeImage(img_file_path, image);\n        saveSetting(\"logo_img_path\", img_file_path);\n        await previewWidget();\n\n      },\n    },\n    {\n      title: \"重置设定(仅保留refresh_token)\",\n      action: async () => {\n        saveSetting(\"logo_img_path\", \"\");\n        saveSetting(\"car_img_path\", \"\");\n        saveSetting(\"car_series_name\", \"\");\n        await previewWidget();\n\n      },\n    },\n    {\n      title: \"预览\",\n      action: async () => {\n        await previewWidget();\n      },\n    },\n  ];\n  setting_actions.map((action) => {\n    alert.addAction(action.title);\n  });\n  alert.addCancelAction(\"取消\");\n  await alert\n    .presentAlert()\n    .then((action_index) => {\n      if (action_index >= 0) {\n        return setting_actions[action_index].action();\n      }\n    })\n\n}\n",
  "share_sheet_inputs" : [

  ]
}